This is a benchmark to produce a small line list for phosphine (PH3) using 
a relatively  large primitive bais set.

It includes the following set of jobs:
./trove.x <ph3_P18_step1.inp > ph3_P18_step1.out
./trove.x <ph3_P18_step2.inp > ph3_P18_step3.out
......
./trove.x <ph3_P18_step10.inp > ph3_P18_step10.out
./trove.x <ph3_P18_intensity.inp > ph3_P18_intensity.out
covers the following several steps:

Step 1: Produce the initial smaller J=0 HAMILTONIAN matrix and diagonalize it using DSYEV (step1)
Step 2: Convert to J=0 representaion; prepare matrix elements for  J>0 calculations (step2)
Step 3: Generate a J=0-5,10 energies and eigenfunctions  (step3-step9) by diagonalising 
        three doube real, symmetric matrices for each J using  DSYEV. 
        Each calculaiton is independent, but depends on the checkpoints produced at steps 1-2.
        It requires checkpoints from steps 1-2.
Step 4: Generate a J=100 (doube real, symmetric) matrix  and store to the disk without diagonalization (step10)
Step 5: Intensity calculations between J=0-5 states (ph3_P18_step_intensity.inp). 
        It will depend on the checkpoints produced at steps 1-3.

Memory and time requirements: 
Step1:    84 Gb 27032.7   
Step2:   9.9 Gb 1220.9 s
Step3:   0.8 Gb 2.6 s
Step4:   6.8 Gb 73 s
Step5:   7.8 Gb 198 s
Step6:   8.4 Gb  502 s 
Step7:   9.0 Gb  830 s
Step8:   9.6 Gb  1449 s
Step9:  19.3 Gb  9032 s
Step10: 32.5 Gb  12096 s
Step_intensity: 89 Gb  1592 s

Disk space used: 300 Gb

Here J is the rotational angular momentum. 
There are three  matrices to diagonalise for each symmetry Gamma=A1,A2,E.
The dimensions of the matrices are  given approximately  by 
N(A) = (2J+1) x N0(A)
N(E) = (2J+1) x N0(E)
where N0 are the  dimensions of the A and E matrices at J=0, N0=1000 and 2000 (approximetly)

The first step in this case is realtively expensive, 84 Gb and 27032.7 s on a 16 
processor workstation.  
